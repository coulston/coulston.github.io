
<head>
<!DOCTYPE html>
<html lang="en">
<!----- http://getbootstrap.com/css/ ----->
    <head>
        <title>EENG 498 - Lecture Notes</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="description" content="EENG 498 - Embedded Systems II">
        <meta name="author" content="Chris Coulston">
        <link rel='stylesheet' type='text/css' href='//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css'>
        <script src='//netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/js/bootstrap.min.js'></script>
    </head>

<body>
        <div class = "container">
            <div class = "navbar navbar-inverse">
                <div class = "navbar-inner">
                    <a class = "brand" href="../index.html">EENG 498</a>
                    <ul class="nav pull-right">
                        <li><a href="./lecture28.html">&ltPrev</a></li>
                        <li><a href="./lecture33.html">Next&gt</a></li>
                    </ul>

                    </ul>
                </div>
            </div>

<table class="table table-striped table-bordered table-condensed">
<tr><td>Lecture</td>	<td>32</td></tr>
<tr><td>Class Objectives</td>	<td>Have a firm understanding of the
AXI interface that is used to allow the Zynq to communiate with your IP.
</table>


<h2>Zynq</h2>
The Zynq 7010 chip is seperated into 2 halves, a processing system and
a programmable logic section.  Up to this point, we have been working
exclusively with the programmable logic section through Vivado.  It's
now time to turn our attention to the processing system.<Br>

The processing system contains a pair of ARM Cortex-A9 CPUs. Some
important facts about the Arm-A9:
<ul>
<li>I sometimes refer to the ARM Cortex-A9 as the "Zynq
	processor" in my written documents.
<li>It has a 32-bit word.  This means that all operations are performed
	in 32-bits units.  This includes reading and writting memory and
	arithmetic and logic operations.
<li>It is byte addresible.  This means that that every increment in 
	address moves forward 8-bit.  
</ul>

One special feature that we will focus on is that the Arm-A9 can
communicate with the programmable logic through the AXI interface.  

<br><img width=500 src="./img/zynq-mp-core-dual.png"><br><br>

The AXI interface provides you with a memory mapped interface to 
any signal that you provide as part of your IP entity description.
This means, for example, that you could set the oscilloscope 
trigger voltage by writing a 16-bit 2's complement value to address 
0x43C00000. You could read ch1Data16bitSLV by reading from address
0x43C00004.  While doing this you can still send signals directly
from oscillscope outside the chip.  For example, the HDMI signals
do not need to go through the AXI interface to reach the correct
Zynq pins.  
<br>


The AXI interface will consume a lot of our attention when converting
out IP into a form that can interface with the Arm A9.  

<h2>Interfacing your IP with the AXI interface</h2>

</html>

